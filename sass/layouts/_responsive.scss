/**
 * @file
 * Positioning for a responsive layout.
 *
 * Define CSS classes to create a fluid grid layout with optional sidebars
 * depending on whether blocks are placed in the left or right sidebars.
 *
 * This layout uses the Zen Grids plugin for Compass: http://zengrids.com
 */

// We are going to create a fluid grid with 1, 3, or 5 columns and 20px gutters
// between columns (applied as 10px of left/right padding on each column).
$zen-columns:  1 !global;
$zen-gutters:  20px !global;
$zen-gutter-method: padding !global;
$zen-grid-width: 100%;

// If you need IE6/7 support for box-sizing: border-box (default), see _base.scss
//$zen-box-sizing: content-box;

// You can generate more efficient CSS if you manually apply the
// zen-grid-item-base mixin to all grid items from within a single ruleset.
$zen-auto-include-grid-item-base: false;
// $zen-auto-include-flow-item-base: false;

// Suppress this section of CSS for RTL layouts since it contains no LTR-specific styles.
@if $zen-switch-direction == false {

/**
 * Center the page.
 *
 * For screen sizes larger than 1200px, prevent excessively long lines of text
 * by setting a max-width.
 */
#page,
.region-bottom {
  margin-left: auto;
  margin-right: auto;
  max-width: 960px;
}

/* Apply the shared properties of grid items in a single, efficient ruleset. */
#header,
#content,
#navigation,
.region-sidebar-first,
.region-sidebar-second,
#footer {
  // See the note about $zen-auto-include-grid-item-base above.
  @include zen-grid-item-base();
}

/* Containers for grid items and flow items. */
#header,
#main,
#footer {
  @include zen-grid-container();
}
#block-views-homepage-images-block,
#block-block-3 {
  display: none;
}
#block-block-1,
#block-search-form {
  float: none;
  text-align: center;
  margin: 1em;
  .form-submit {
    top: 0;
  }

}
/* Navigation bar */
@media all and (min-width: 480px) {
  #main {
    /* Move all the children of #main down to make room. */
    padding-top: ($nav-height + 3);
    position: relative;
  }
  .front #main {
    /* Move all the children of #main down to make room. */
    padding-top: ($nav-height);
  }
  #navigation {
    /* Move the navbar up inside #main's padding. */
    position: absolute;
    top: 0;
    height: $nav-height;
    width: $zen-grid-width;
  }
}

} // End of @if $zen-switch-direction == true

/**
 * Use 3 grid columns for smaller screens.
 */
@media all and (min-width: 480px) and (max-width: 959px) {

  $zen-columns: 4 !global;

  #main {
    //@include zen-grid-background();
  }

  #header {
    #block-block-1 {
      @include zen-grid-item(1, 1);      
      p {
        bottom: 0;
        left: 30px;
        margin: 0;
        padding: 1em;
        position: absolute;
      }
    }
    #logo {
      @include zen-grid-item(2, 2);
      text-align: center;
      margin-top: 1.5em;
      margin-bottom: 1.5em;
    }
    #block-search-form {
      @include zen-grid-item(1, 4);      
      text-align: right;
    .search-form {
      bottom: 0;
      margin: 1em;
      position: absolute;
      right: 0;
    }
    .form-submit {
      position: relative;
      top: 6px;
    }
    }
  }  
  #block-views-homepage-images-block {
    @include zen-grid-item-base();
    @include zen-grid-container($context: grid-item);
    @include zen-grid-item(4, 1);
    display: block;
  }
  #block-block-17 {
    display: none;
  }
  .region-content-bottom {
      @include zen-new-row();
      @include zen-grid-item-base();
      @include zen-grid-container($context: grid-item);
      @include zen-grid-item(4, 1);
      $zen-columns: 3;
    #block-views-main-landing-block-7 {
      @include zen-grid-item-base();
      @include zen-grid-container($context: none);
      @include zen-grid-item(1, 1);
      padding: 10px;
      font-size: 0.95em;
      img {
        width: 110px;
        margin-top: 0.5em;
        height: auto;
      }
    }
    #block-block-3 {
      @include zen-grid-item-base();
      @include zen-grid-container($context: none);
      @include zen-grid-item(1, 2);
      display: block;
    }
    #block-views-main-landing-block-6 {
      @include zen-grid-item-base();
      @include zen-grid-container($context: none);
      @include zen-grid-item(1, 3);
      padding: 10px;
      font-size: 0.95em;
      img {
        width: 110px;
        margin-top: 0.5em;
        height: auto;
      }
    }
  }
#navigation {
  h2 {
    display: none;
  }
  #nice-menu-1 {
    $zen-columns: 7 !global;
    $zen-gutters:  0 !global;
    @include zen-grid-container($context: flow);
    @include zen-grid-item(7, 1, $columns: 7);
    height: $nav-height;
    font-size: 0.85em;
    //@include zen-grid-background();
  }
  #dhtml_menu-377 {
    //@include zen-grid-item(1, 1);    
  }
  #dhtml_menu-3793 {
    //@include zen-grid-item(1, 2);    
  }
  #dhtml_menu-3799 {
    //@include zen-grid-item(1, 3);    
  }
  #dhtml_menu-3832 {
    //@include zen-grid-item(1, 4);    
  }
  #dhtml_menu-3844 {
    //@include zen-grid-item(1, 5);    
  }
  #dhtml_menu-3851 {
    //@include zen-grid-item(1, 6);    
  }
  #dhtml_menu-385 {
    //@include zen-grid-item(1, 7);    
  }
  li:nth-child(1) {
    @include zen-grid-item(1, 1);
  }
  li:nth-child(2) {
    @include zen-grid-item(1, 2);
  }
  li:nth-child(3) {
    @include zen-grid-item(1, 3);
  }
  li:nth-child(4) {
    @include zen-grid-item(1, 4);
  }
  li:nth-child(5) {
    @include zen-grid-item(1, 5);
  }
  li:nth-child(6) {
    @include zen-grid-item(1, 6);
  }
  li:nth-child(7) {
    @include zen-grid-item(1, 7);
  }
}

  #contact-site-form {
      float: right;
      padding: 0 0 0 10px;
      width: 300px;
  }

  /**
   * The layout when there is only one sidebar, the left one.
   */
  .sidebar-first, .page-contact {
    /* Span 2 columns, starting in 2nd column from left. */
    $zen-columns: 4 !global;
    $zen-gutters:  20px !global;
    #content {      
      @include zen-grid-item(3, 2);
      //@include zen-grid-background();
    }
    /* Span 1 column, starting in 1st column from left. */
    .region-sidebar-first {
      @include zen-grid-item(1, 1);
    }
  }

  /**
   * The layout when there is only one sidebar, the right one.
   */
  .sidebar-second {
    /* Span 2 columns, starting in 1st column from left. */
    #content {
      @include zen-grid-item(2, 1);
    }

    /* Span 1 column, starting in 3rd column from left. */
    .region-sidebar-second {
      @include zen-grid-item(1, 3);
    }
  }

  /**
   * The layout when there are two sidebars.
   */
  .two-sidebars {
    /* Span 2 columns, starting in 2nd column from left. */
    #content {
      @include zen-grid-item(2, 2);
    }

    /* Span 1 column, starting in 1st column from left. */
    .region-sidebar-first {
      @include zen-grid-item(1, 1);
    }

    /* Start a new row and span all 3 columns. */
    .region-sidebar-second {
      @include zen-grid-item(3, 1);
      @include zen-grid-container($context: flow); // Since we're making every block in this region be a grid item.
      @include zen-new-row();

      /* Apply the shared properties of grid items in a single, efficient ruleset. */
      .block {
        @include zen-grid-item-base();
      }
      /* Span 1 column, starting in the 1st column from left. */
      .block:nth-child(3n+1) {
        @include zen-grid-item(1, 1);
        @include zen-new-row();
      }
      /* Span 1 column, starting in the 2nd column from left. */
      .block:nth-child(3n+2) {
        @include zen-grid-item(1, 2);
      }
      /* Span 1 column, starting in the 3rd column from left. */
      .block:nth-child(3n) {
        @include zen-grid-item(1, 3);
      }
    }
  }
.page-taxonomy-term {
  .view-taxonomy-term {
    text-align: center;
      .views-field-title {
        text-align: center;
      }
  }
}
// responsive grid layout
  .views-responsive-grid {
    @include zen-grid-item-base();
    @include zen-grid-container();
    //@include zen-grid-background();
  }
  .views-responsive-grid.views-columns-2 {
    $zen-columns:  2 !global;
    @include zen-grid-container($context: flow);
    .views-row {
      @include zen-new-row();
    }
    .views-column-1 {
      @include zen-grid-item(1, 1);
    }
    .views-column-2 {
      @include zen-grid-item(1, 2);
    }
  }
  .views-responsive-grid.views-columns-3 {
    $zen-columns:  2 !global;
    @include zen-grid-container($context: flow);
    //@include zen-grid-background();
      .views-row {
        width:49%;
        float:left;
        &:nth-child(2n - 1) {
          margin-right:2%;
        }
      }
  }
  .views-responsive-grid.views-columns-4 {
    $zen-columns:  4 !global;
    @include zen-grid-container($context: flow);
    //@include zen-grid-background();  
    .views-column-1 {
      @include zen-grid-item(1, 1);
    }
    .views-column-2 {
      @include zen-grid-item(1, 2);
      @include zen-new-row();
    }
    .views-column-3 {
      @include zen-grid-item(1, 1);
    }
    .views-column-4 {
      @include zen-grid-item(1, 2);
    }
  }

}

/**
 * Use 5 grid columns for larger screens.
 */
@media all and (min-width: 960px) {

  $zen-columns: 6 !global;
  $zen-gutters:  20px !global;
  #page {
    //@include zen-grid-background();
  }
  #header {
    #block-block-1 {
      @include zen-grid-item(2, 1);      
      p {
        bottom: 0;
        left: 30px;
        margin: 0;
        padding: 1em;
        position: absolute;
      }
    }
    #logo {
      @include zen-grid-item(4, 2);
      text-align: center;
      margin-top: 1.5em;
      margin-bottom: 1.5em;
    }
    #block-search-form {
      @include zen-grid-item(2, 5);
      text-align: right;
    .search-form {
      bottom: 0;
      margin: 1em;
      position: absolute;
      right: 0;
    }
    .form-submit {
      position: relative;
      top: 6px;
    }
    }
  }
  #block-views-homepage-images-block {
    @include zen-grid-item-base();
    @include zen-grid-container($context: grid-item);
    @include zen-grid-item(6, 1);
    display: block;
  }
  #block-block-17 {
    display: none;
  }
  .region-content-bottom {
      @include zen-new-row();
      @include zen-grid-item-base();
      @include zen-grid-container($context: grid-item);
      @include zen-grid-item(6, 1);
    #block-views-main-landing-block-7 {
      @include zen-grid-item-base();
      @include zen-grid-container($context: none);
      @include zen-grid-item(2, 1);
      padding: 10px;
    }
    #block-block-3 {
      @include zen-grid-item-base();
      @include zen-grid-container($context: none);
      @include zen-grid-item(2, 3);
      display: block;
    }
    #block-views-main-landing-block-6 {
      @include zen-grid-item-base();
      @include zen-grid-container($context: none);
      @include zen-grid-item(2, 5);
      padding: 10px;
    }
  }

#navigation {
  h2 {
    display: none;
  }
  #nice-menu-1 {
    $zen-columns: 7 !global;
    //$zen-gutters:  0 !global;
    height: $nav-height;
    @include zen-grid-container($context: flow);
    @include zen-grid-item(7, 1, $columns: 7);
    //@include zen-grid-background();
    li {
      //top: 1em;
      ul {
        li {
          //top: 0;
        }
      }
     }
  }
  #dhtml_menu-377 {
    //@include zen-grid-item(1, 1);    
  }
  #dhtml_menu-3793 {
    //@include zen-grid-item(1, 2);    
  }
  #dhtml_menu-3799 {
    //@include zen-grid-item(1, 3);    
  }
  #dhtml_menu-3832 {
    //@include zen-grid-item(1, 4);    
  }
  #dhtml_menu-3844 {
    //@include zen-grid-item(1, 5);    
  }
  #dhtml_menu-3851 {
    //@include zen-grid-item(1, 6);    
  }
  #dhtml_menu-385 {
    //@include zen-grid-item(1, 7);    
  }
  li:nth-child(1) {
    @include zen-grid-item(1, 1);
  }
  li:nth-child(2) {
    @include zen-grid-item(1, 2);
  }
  li:nth-child(3) {
    @include zen-grid-item(1, 3);
  }
  li:nth-child(4) {
    @include zen-grid-item(1, 4);
  }
  li:nth-child(5) {
    @include zen-grid-item(1, 5);
  }
  li:nth-child(6) {
    @include zen-grid-item(1, 6);
  }
  li:nth-child(7) {
    @include zen-grid-item(1, 7);
  }
}

  #contact-site-form {
      float: right;
      padding: 0 0 0 10px;
      width: 456px;
  }

  /**
   * The layout when there is only one sidebar, the left one.
   */
  .sidebar-first, .page-contact {
    /* Span 4 columns, starting in 2nd column from left. */
    $zen-columns: 6 !global;
    $zen-gutters:  20px !global;
    #content {
      @include zen-grid-item(5, 2);
      //@include zen-grid-background();
      padding-right: 6em;
    }

    /* Span 1 column, starting in 1st column from left. */
    .region-sidebar-first {
      @include zen-grid-item(1, 1);
    }
  }

  /**
   * The layout when there is only one sidebar, the right one.
   */
  .sidebar-second {
    /* Span 4 columns, starting in 1st column from left. */
    #content {
      @include zen-grid-item(5, 1);
    }

    /* Span 1 column, starting in 5th column from left. */
    .region-sidebar-second {
      @include zen-grid-item(1, 6);
    }
  }

  /**
   * The layout when there are two sidebars.
   */
  .two-sidebars {
    /* Span 3 columns, starting in 2nd column from left. */
    #content {
      @include zen-grid-item(4, 2);
    }

    /* Span 1 column, starting in 1st column from left. */
    .region-sidebar-first {
      @include zen-grid-item(1, 1);
    }

    /* Span 1 column, starting in 5th column from left. */
    .region-sidebar-second {
      @include zen-grid-item(1, 6);
    }
  }
  .page-taxonomy-term {
    .view-taxonomy-term {
      text-align: left;
      .views-field-title {
        text-align: center;
      }
    }
}

// responsive grid layout
  .views-responsive-grid {
    @include zen-grid-item-base();
    @include zen-grid-container();
    //@include zen-grid-background();
  }
  .views-responsive-grid .views-row {
    @include zen-new-row();
  }
  .views-responsive-grid.views-columns-2 {
    $zen-columns:  2 !global;
    @include zen-grid-container($context: flow);
    .views-column-1 {
      @include zen-grid-item(1, 1);
    }
    .views-column-2 {
      @include zen-grid-item(1, 2);
    }
  }
  .views-responsive-grid.views-columns-3 {
    $zen-columns:  3 !global;
    @include zen-grid-container($context: flow);
    .views-column-1 {
      @include zen-grid-item(1, 1);
    }
    .views-column-2 {
      @include zen-grid-item(1, 2);
    }
    .views-column-3 {
      @include zen-grid-item(1, 3);
    }
  }
  .views-responsive-grid.views-columns-4 {
    $zen-columns:  4 !global;
    @include zen-grid-container($context: flow);
    //@include zen-grid-background();  
    .views-column-1 {
      @include zen-grid-item(1, 1);
    }
    .views-column-2 {
      @include zen-grid-item(1, 2);
    }
    .views-column-3 {
      @include zen-grid-item(1, 3);
    }
    .views-column-4 {
      @include zen-grid-item(1, 4);
    }
  }
}
